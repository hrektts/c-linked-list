var searchIndex = {};
searchIndex["c_linked_list"] = {"doc":"A linked list for wrapping a C linked list.","items":[[3,"CLinkedList","c_linked_list","A linked list for wrapping a C linked list.",null,null],[3,"Iter","","An iterator over the elements of a `CLinkedList`.",null,null],[3,"IterMut","","A mutable iterator over the elements of a `CLinkedList`.",null,null],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_const_ptr","","Creates a `CLinkedList` by wrapping a C linked list. `head` points to the head element of the list or is NULL for a list of length 0. `next` is a function that takes an element and returns an immutable raw pointer to the next element.",2,null],[11,"len","","Returns the length of the `CLinkedList`.",2,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"contains","","Returns `true` if the `CLinkedList` contains an element equal to the given value.",2,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"from_mut_ptr","","Creates a `CLinkedList` by wrapping a C linked list. `head` points to the head element of the list or is NULL for a list of length 0. `next` is a function that takes an element and returns a mutable raw pointer to the next element.",2,null],[11,"iter_mut","","Provides a forward iterator with mutable references.",2,{"inputs":[{"name":"self"}],"output":{"name":"itermut"}}],[11,"len","","Returns the length of the `CLinkedList`.",2,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"contains","","Returns `true` if the `CLinkedList` contains an element equal to the given value.",2,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"front_mut","","Provides a mutable reference to the front element, or `None` if the list is empty.",2,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"iter","","Provides a forward iterator.",2,{"inputs":[{"name":"self"}],"output":{"name":"iter"}}],[11,"is_empty","","Returns `true` if the `CLinkedList` is empty.",2,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"front","","Provides a reference to the front element, or `None` if the list is empty.",2,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"next","","",0,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"size_hint","","",0,null],[11,"next","","",0,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"size_hint","","",0,null],[11,"next","","",1,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"size_hint","","",1,null],[11,"fmt","","",2,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",2,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}]],"paths":[[3,"Iter"],[3,"IterMut"],[3,"CLinkedList"]]};
initSearch(searchIndex);
